import pytest
from main import create_dictionary
import reporting

test_data = create_dictionary("reporting_test_data")
test_dict = {"Harlington": test_data}


def test_daily_average():
    assert reporting.daily_average(test_dict, "Harlington", "pm25") == [18.270625, 6.157208333333332, 5.921875,
                                                                        3.5258333333333334, 3.3435416666666664,
                                                                        5.216916666666665, 15.463708333333331,
                                                                        21.40908333333334, 13.704083333333331,
                                                                        14.898791666666666, 4.970791666666668, 6.1325,
                                                                        9.574916666666669, 3.054416666666667,
                                                                        14.843541666666667, 5.870791666666668,
                                                                        6.099458333333334, 5.186749999999999,
                                                                        1.9948333333333332, 4.0881428571428575,
                                                                        3.402125, 5.052249999999999, 6.792041666666666,
                                                                        7.346541666666666, 7.619041666666668,
                                                                        6.816458333333334, 7.721, 3.9273749999999996,
                                                                        5.030333333333333, 5.532416666666667,
                                                                        8.652083333333334]


def test_daily_median():
    assert reporting.daily_median(test_dict, "Harlington", "pm25") == [19.242, 5.965999999999999, 6.067, 3.3015, 3.449,
                                                                       4.5024999999999995, 15.313500000000001,
                                                                       20.304000000000002, 13.6345, 15.5545,
                                                                       2.4435000000000002, 3.6265, 11.7975,
                                                                       2.6550000000000002, 13.154499999999999, 5.1205,
                                                                       5.9990000000000006, 5.897, 1.109, 3.474, 2.4325,
                                                                       4.5465, 6.148, 8.3655, 7.0845,
                                                                       7.0009999999999994, 7.3755, 2.8985000000000003,
                                                                       5.3260000000000005, 5.416499999999999, 8.772]


def test_hourly_average():
    assert reporting.hourly_average(test_dict, "Harlington", "pm25") == [7.909032258064516,
                                                                         7.339580645161289,
                                                                         7.078677419354838,
                                                                         6.848290322580647,
                                                                         6.758096774193548,
                                                                         6.6979354838709675,
                                                                         6.62858064516129,
                                                                         6.640806451612904,
                                                                         6.974677419354837,
                                                                         7.378966666666668,
                                                                         7.686300000000002,
                                                                         7.2642999999999995,
                                                                         7.100258064516129,
                                                                         7.491903225806453,
                                                                         7.423225806451615,
                                                                         7.260612903225809,
                                                                         7.824774193548388,
                                                                         8.257096774193549,
                                                                         8.656258064516129,
                                                                         9.25351612903226,
                                                                         9.686548387096776,
                                                                         9.554870967741936,
                                                                         8.557741935483872,
                                                                         8.01609677419355]


# def test_monthly_average():
# assert reporting.monthly_average(test_dict, "Harlington", "pm25") == [7]

def test_peak_hour():
    assert reporting.peak_hour_date(test_dict, "2021/01/01", "Harlington", "pm25") == 27.694


def test_count_missing():
    assert reporting.count_missing_data(test_dict, "Harlington", "pm25") == 3


def test_replace_missing_values():
    new = reporting.fill_missing_data(test_dict, "ECM1400", "Harlington", "pm25")
    counter = 0
    for item in new:
        if item == "ECM1400":
            counter += 1

    assert counter == 3
